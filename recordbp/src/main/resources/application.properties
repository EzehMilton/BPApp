server.port=8082
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# postgres db exists by default. if you add another name ypu will need to create the DB
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#docker settings
#docker
spring.datasource.url=jdbc:postgresql://register_db:5433/recordbpdb
spring.datasource.username=myUser
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

################################
# Enabling H2 Console - disabled
################################
# via -> http://localhost:8080/h2-console
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.data.jpa.repositories.bootstrap-mode=default

# To persist a database in a file
# spring.datasource.url=jdbc:h2:file:/data/demo

# Full debug
# logging.level.org.springframework: DEBUG

##########
# Actuator
##########
# Expose all actuator endpoints
management.endpoints.web.exposure.include=*

# Full details. if you?re using a database, it will regularly query the database to see if it?s still up
management.endpoint.health.show-details=always

# set message from ResponseStatusException
server.error.include-message=always
